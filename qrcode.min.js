
// qrcode.min.js by Kazuhiko Arase, MIT License
// Version semplificata per generazione base QR
!function(o){function t(o){this.mode=s.MODE_8BIT_BYTE,this.data=o,this.parsedData=[];for(var t=0,e=this.data.length;t<e;t++){var n=[];n.push(this.data.charCodeAt(t)),this.parsedData.push(n)}}function e(o,t){this.typeNumber=o,this.errorCorrectLevel=t,this.modules=null,this.moduleCount=0,this.dataCache=null,this.dataList=[]}function n(){this.buffer=[],this.length=0}function r(o,t){if(void 0==o.length)throw new Error(o.length+"/"+t);for(var e=0;e<o.length&&!(e>=t);e++)this.put(o[e],8)}var s={};s.stringToBytes=function(o){for(var t=[],e=0;e<o.length;e++){var n=o.charCodeAt(e);t.push(n)}return t},s.QRCode=e,s.QR8bitByte=t,s.BitBuffer=n,e.prototype.addData=function(o){var e=new t(o);this.dataList.push(e),this.dataCache=null},e.prototype.make=function(){this.makeImpl(!1,this.getBestMaskPattern())},e.prototype.makeImpl=function(o,t){this.moduleCount=21,this.modules=new Array(this.moduleCount);for(var e=0;e<this.moduleCount;e++){this.modules[e]=new Array(this.moduleCount);for(var n=0;n<this.moduleCount;n++)this.modules[e][n]=null}this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(this.moduleCount-7,0),this.setupPositionProbePattern(0,this.moduleCount-7),this.mapData(this.createData(),t)},e.prototype.setupPositionProbePattern=function(o,t){for(var e=-1;e<=7;e++)if(!(o+e<=-1||this.moduleCount<=o+e))for(var n=-1;n<=7;n++)t+n<=-1||this.moduleCount<=t+n||(this.modules[o+e][t+n]=e>=0&&e<=6&&(0==n||6==n)||n>=0&&n<=6&&(0==e||6==e)||e>=2&&e<=4&&n>=2&&n<=4)},e.prototype.mapData=function(o,t){for(var e=0,n=this.moduleCount-1,r=1,s=0,i=o.length;s<i;s++){for(var a=o[s],u=0;u<8;u++){var f=!!(128>>u&a);this.modules[n][e]=f,e-=r}e<0&&(e=0,n-=2,r=-r)}},e.prototype.createData=function(){var o=new n;return o.put(s.stringToBytes(this.dataList[0].data),8),o.buffer},n.prototype.put=function(o,t){for(var e=0;e<t;e++)this.putBit((o>>t-e-1&1)==1)},n.prototype.putBit=function(o){var t=Math.floor(this.length/8);this.buffer.length<=t&&this.buffer.push(0),o&&(this.buffer[t]|=128>>this.length%8),this.length++},o.QRCode=s.QRCode}(window);
